version: 2.1

jobs:
  prepare_env:
    # job to prepare build environment
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/devops/ci-packer:latest
    working_directory: ~/aws_ecr_ami
    steps:
      - checkout:
          path: ~/aws_ecr_ami
      - run:
          name: Prepare env for build
          command: echo 'export BUILD_TAG="${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}-$(git rev-parse --verify HEAD | cut -c1-8)"' >> ${BASH_ENV}
      - run:
          name: Prepare git metadata
          command: |
            echo "export DD_GIT_BRANCH=${CIRCLE_BRANCH}" >> metadata.env
            echo "export DD_GIT_COMMIT_SHA=${CIRCLE_SHA1}" >> metadata.env
            echo "export DD_GIT_REPOSITORY_URL=${CIRCLE_REPOSITORY_URL}" >> metadata.env
            echo "export DD_GIT_TAG=${CIRCLE_BRANCH}_${CIRCLE_SHA1}" >> metadata.env
            git log --format='export DD_GIT_COMMIT_AUTHOR_DATE="%aD"' -n 1 >> metadata.env
            git log --format='export DD_GIT_COMMIT_AUTHOR_EMAIL="%ae"' -n 1 >> metadata.env
            git log --format='export DD_GIT_COMMIT_AUTHOR_NAME="%an"' -n 1 >> metadata.env
            git log --format='export DD_GIT_COMMIT_COMMITTER_DATE="%cD"' -n 1 >> metadata.env
            git log --format='export DD_GIT_COMMIT_COMMITTER_EMAIL="%ce"' -n 1 >> metadata.env
            git log --format='export DD_GIT_COMMIT_COMMITTER_NAME="%cn"' -n 1 >> metadata.env
            git log --format='export DD_GIT_COMMIT_MESSAGE="%s"' -n 1 >> metadata.env
      - persist_to_workspace:
          root: "~"
          paths:
            - aws_ecr_ami
  validate:
    # job to validate aws ecr ami image
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/devops/ci-packer:latest
    working_directory: ~/aws_ecr_ami
    steps:
      - attach_workspace:
            at: .
      - run:
          name: debug path location
          command: pwd
      - run:
          name: Packer Validate
          command: make -e -j2 all-validate
  build:
    # job to build aws ecr ami image
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/devops/ci-packer:latest
    working_directory: ~/aws_ecr_ami
    steps:
      - attach_workspace:
            at: .
      - run:
          name: Packer build
          # AWS sometimes take really long to finish ami build.
          # By default, Crircle CI have 10 minutes timeout without response,
          # so we must extend that timeout limit to be sure that ami build can pass
          no_output_timeout: 60m
          command: make -e -j2 all
      - run:
          name: Notify after build
          command: "echo TODO: finish datadog integration"
  send_to_dd:
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/datadog-ci:latest
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Push metadata to datadog
          # NB! circleci *ignores entrypoints in docker containers*, you have to pass it explicitly
          command: |
            source metadata.env
            /usr/local/bin/datadog-ci git-metadata upload
          environment:
            DATADOG_SITE: datadoghq.com
            DD_ENV: ci
workflows:
  aws_eks_ami:
    jobs:
      - prepare_env:
          context: CICD
      - validate:
          context: CICD
          requires:
            - prepare_env
      - build:
          context: CICD
          requires:
            - validate
          filters:
            branches:
              only:
                - master
      - send_to_dd:
          context: CICD
          requires:
            - validate
            - build
