version: 2.1

# Inline dd agent orb definition
orbs:
  dd-agent:
    orbs:
      python: circleci/python@2.0.3
    commands:
      setup:
        description: "Installs and starts the Datadog Agent"
        parameters:
          api_key:
            type: env_var_name
            description: The name of the environmental variable containing the API key
            default: DD_API_KEY
          agent_major_version:
            type: string
            description: The major version of the agent to use
            default: "7"
          site:
            type: string
            description: The datadog site to send data to. If the environment variable DD_SITE is set that will take preference.
            default: "datadoghq.com"
        steps:
          - run:
              environment:
                PARAM_DD_API_KEY: <<parameters.api_key>>
                PARAM_DD_AGENT_MAJOR_VERSION: <<parameters.agent_major_version>>
                PARAM_DD_SITE: <<parameters.site>>
              name: Install and start the Datadog Agent
              working_directory: /tmp
              command: <<include(scripts/setup.sh)>>
      stop:
        description: "Gracefully stop the Datadog Agent"
        steps:
          - run:
              when: always
              name: Gracefully stop the Datadog Agent
              command: <<include(scripts/stop.sh)>>

# workflow jobs definition
jobs:
  prepare_env:
    # job to prepare build environment
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/devops/ci-packer:latest
    working_directory: ~/aws_ecr_ami
    steps:
      - checkout:
          path: ~/aws_ecr_ami
      - run:
          name: Prepare env for build
          command: echo 'export BUILD_TAG="${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}-$(git rev-parse --verify HEAD | cut -c1-8)"' >> ${BASH_ENV}
      - dd-agent/setup
      - persist_to_workspace:
          root: "~"
          paths:
            - aws_ecr_ami
  validate:
    # job to validate aws ecr ami image
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/devops/ci-packer:latest
    steps:
      - attach_workspace:
            at: .
      - run:
          name: Packer Validate
          command: cd aws_ecr_ami && make -e -j2 all-validate
  build:
    # job to build aws ecr ami image
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/devops/ci-packer:latest
    steps:
      - attach_workspace:
            at: .
      - run:
          name: Packer build
          # AWS sometimes take really long to finish ami build.
          # By default, Crircle CI have 10 minutes timeout without response,
          # so we must extend that timeout limit to be sure that ami build can pass
          no_output_timeout: 60m
          command: cd aws_ecr_ami && make -e -j2 all
  send_to_dd:
    docker:
      - image: ${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/datadog-ci:latest
    resource_class: small
    steps:
      - attach_workspace:
            at: .
      - dd-agent/stop
workflows:
  aws_eks_ami:
    jobs:
      - prepare_env:
          context: CICD
      - validate:
          context: CICD
          requires:
            - prepare_env
      - build:
          context: CICD
          requires:
            - validate
          filters:
            branches:
              only:
                - master
      - send_to_dd:
          context: CICD
          requires:
            - validate
            - build
